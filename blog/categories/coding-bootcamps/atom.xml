<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: coding bootcamps | RebootJeff.com]]></title>
  <link href="http://RebootJeff.github.io/blog/categories/coding-bootcamps/atom.xml" rel="self"/>
  <link href="http://RebootJeff.github.io/"/>
  <updated>2013-10-15T21:22:30-07:00</updated>
  <id>http://RebootJeff.github.io/</id>
  <author>
    <name><![CDATA[Jeff Lee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[HackR Diary] Week 3: Order in the Code]]></title>
    <link href="http://RebootJeff.github.io/blog/2013/10/14/hackr-diary-week-3-backbone/"/>
    <updated>2013-10-14T00:22:00-07:00</updated>
    <id>http://RebootJeff.github.io/blog/2013/10/14/hackr-diary-week-3-backbone</id>
    <content type="html"><![CDATA[<p><img src="/images/20131014/logos.png" alt="logos" /></p>

<p class="my-caption">Tech from the previous week: Bower, Backbone, and CoffeeScript</p>

<p>It’s funny how time perception is so easily manipulated. After 3 weeks of immersive education, I forget what day of the week it is. My fellow students also think time is passing by really quickly despite how many hours per day we spend in one (big) room.</p>

<p>Weekends are limited to Sundays due to the 6-days-per-week schedule, so Fridays don’t feel like Fridays (so to speak). However, I should note that Saturdays at Hack Reactor are less intense than other days because the weekly social nights replace the final few hours of the daily classwork with entertainment. Social nights are optional, and plenty of students decide to spend that time working.</p>

<h2 id="more-varied-thoughts-from-week-3">More varied thoughts from week 3</h2>

<ul>
  <li>I’ve stopped using pen + paper. I probably didn’t need to buy notebook for this course, and I’m just not a fan of paper. Hopefully my lack of note-taking won’t bite me later. Hack Reactor provides some good online notes, diagrams, etc, but I’m not sure they’ll be enough when it comes time to study for job interviews. That said, I’m not too worried.</li>
  <li>Gym time is limited. Students get 2-hour lunch breaks every other day, but it takes at least 10 minutes to walk to the gym, a few minutes to change clothes, a few minutes to shower, 5-10 minutes to buy lunch afterwards, etc. Actual workout time is roughly 45-60 minutes max. A lot of us have ended up eating during the post-lunch lecture, so I guess it’s all good.</li>
  <li>Hack Reactor hosts <a href="http://www.meetup.com/hackreactor/">various meetups</a> throughout the week (Coursera study group, general JS meetups, etc). I think that’s a pretty cool way for them to help out the greater dev community.</li>
  <li><strong>Burnout watch:</strong> I still feel pretty excited to go to Hack Reactor 6 days per week, but I definitely look forward to relaxing on Sundays. In <a href="/blog/2013/10/06/hackr-diary-week-2/">my previous blog post</a>, I lamented about spending free my limited free time to write substantive blog posts, but now I think they really help me exercise my memory to prevent that “it was all a blur” feeling.</li>
</ul>

<h1 id="recap-of-events">Recap of Events</h1>

<h3 id="industry-event-firebase">Industry Event: Firebase</h3>

<p>Sadly, I didn’t attend the <a href="https://www.firebase.com/">Firebase</a> meetup hosted at Hack Reactor HQ. I heard from fellow students that the Firebase tech is pretty sweet. Firebase devs gave a demo that impressed many with promises of data syncing hotness.</p>

<p>Why didn’t I attend the event? My pair programming partner and I decided we couldn’t spare any time for the event because we were more concerned with Backbone. Firebase just happened to come around at a bad time for me.</p>

<h3 id="social-night-movie-theater">Social Night: Movie Theater</h3>

<p>Yesterday, many students went to see <em>Gravity</em> (in 3D IMAX format). It was pretty friggin’ fantastic. Afterwards, some of us went our separate ways, some went back to studying/working, and some went out to partake in beverage consumption.</p>

<h1 id="what-i-learned">What I Learned</h1>

<p><strong>Quick tip:</strong> I learned a tactic for dealing with low brain energy. When I’m tired of analyzing software architecture decisions or concocting algorithms, I can give myself a productive break by switching to CSS work. Changing gears from program development to applying styles and designing layouts works wonders to give certain parts of my brain a rest while exercising others.</p>

<p>Most Hack Reactor assignements come with some pre-written code, but they often come devoid of any interesting visuals so that you can practice CSS skills.</p>

<h3 id="bower">Bower</h3>

<p>Not much to say here. Students got a very brief lecture about <a href="http://bower.io/">Bower</a>, but it didn’t take much time to convince me to use it. Easily manage libraries/dependencies with a few terminal commands? Nice. <code>bower install</code> = woot!</p>

<h3 id="inner-workings-of-the-web-httpajax-full-stack-overview">Inner workings of the web (HTTP/AJAX, full stack overview)</h3>

<p>Students have yet to write any server-side code, but we’ve dealt with programming small client-side apps that interact with servers. We were taught some AJAX skills and some general HTTP knowledge. One lecture covered the overall system architecture that describes client-server interaction. <strong>There were so. Many. Terms:</strong> local storage, sockets, page requests, asset requests, client vs server MVC, content delivery networks (CDNs), object-relational mapping (ORM) –good times.</p>

<h3 id="backbone">Backbone</h3>

<p>Most of the week 3 assignemnts involved <a href="http://backbonejs.org/">Backbone</a>, which forced us students to really change the way we think about <em>designing</em> software. Developing with Backbone means organizing code to follow paradigms involving models, views, and collections (not quite MVC –which is “model view <em>controller</em>”).</p>

<p>Before Backbone (a JavaScript framework for providing web apps with structure) our code was a like a stream of consciousness. With Backbone, our code was given order, structure, and rules to follow. It was a tough, but rewarding adjustment. Students were struggling with the process when initially exposed to Backbone. <strong>It’s funny because we were all questioning the effectiveness of Hack Reactor’s curriculum at first, but by the end of the week, most of us feel much more comfy with the framework.</strong></p>

<p>Imagine you could only teach via stream-of-consciousness statements. Content would be expressed, but it would be messy as hell. Now imagine you were forced to teach by writing a well-structured, well-organized textbook. The difference is staggering. Suddenly you need to think about organizing concepts into topics, sequencing topics, connecting topics, etc. Making the leap from using no framework to using Backbone isn’t quite as drastic, but it’s still a tough contrast to get comfortable with in just a few days –even if those days involve ~12 hours of learning.</p>

<h3 id="coffeescript">CoffeeScript</h3>

<p>Before my time at Hack Reactor began, I was open to the idea of learning <a href="http://coffeescript.org/">CoffeeScript</a> (a more expressive, human-readable programming language that compiles into JavaScript, allowing you to write JavaScript with a very different syntax) because it looked friendly in the same way Ruby looks friendly. After a couple of weeks of writing lots of JavaScript code, I was far less open-minded about spending time learning a drastically different syntax. Imagine being told you were going to take a break from learning intermediate Spanish so you could learn beginner Portugese. You’d say, “No thank you, crazy person.” </p>

<p>After finishing the CoffeeScript sprint, I remain somewhat ambivalent. I don’t love it, but I don’t hate it. <strong>The whole experience taught me that learning new syntax isn’t so bad.</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[HackR Diary] Week 2: Now Exiting My Comfort Zone]]></title>
    <link href="http://RebootJeff.github.io/blog/2013/10/06/hackr-diary-week-2/"/>
    <updated>2013-10-06T22:17:00-07:00</updated>
    <id>http://RebootJeff.github.io/blog/2013/10/06/hackr-diary-week-2</id>
    <content type="html"><![CDATA[<p class="last-updated">Last updated on Oct 13, 2013 to fix a typo and embedded a tweet.</p>

<blockquote class="twitter-tweet"><p>Awesome of the <a href="https://twitter.com/Airbnb">@Airbnb</a> team to visit <a href="https://twitter.com/HackReactor">@HackReactor</a>. Picture of them talking about their tech stack. <a href="http://t.co/AYVDYA3JaT">pic.twitter.com/AYVDYA3JaT</a></p>&mdash; Ben Martin (@HealthfulHacker) <a href="https://twitter.com/HealthfulHacker/statuses/385258134677106689">October 2, 2013</a></blockquote>
<script async="" src="http://RebootJeff.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>I don’t know if <a href="blog/2013/09/29/hackr-diary-thoughts-about-week-number-1/">my summary of week #1</a> made it clear or not, but although my first six days at Hack Reactor were tough, I didn’t exactly struggle with any of the material. This is probably because the pre-course work was <a href="/blog/2013/09/22/hackr-diary-pre-course-anticipation/">incredibly difficult</a>, thereby infusing me with helpful knowledge while also shaping my expectations.</p>

<p>Well guess what? Week 1 was an anomaly. It was a week filled with more lectures and less hands-on programming. I knew this ahead of time, but week 2 still caught me off guard. There was quite a bit more learning with minimal guidance. Also, the joys/stresses of pair programming are turned up a few notches as a result of the additional programming time created by reducing the amount of lecture time.</p>

<p>Consequently, I’ve been feeling more tired in general. Forgive me, but spending my free time to write this blog is beginning to look less and less appealing.</p>

<p>I joined a nearby gym (aside: I just remembered that I need to notify Hack Reactor to get my $50 reimbursement from them!) so my energy levels should increase in a week or two. Every other lunch break is two hours long instead of just one hour long. The extra time is meant to encourage students to go exercise.</p>

<p>I want to write more about student life at Hack Reactor, but I think I’ll just spread out the details in my <a href="/blog/categories/hackr-diary/">HackR Diary</a> series rather than providing every bit of info in a single, giant blog post. So for now, I cover gym time, toy problems, and tapouts. In the future, I’ll discuss the workstations, help system, student-staff interaction, food, and more.</p>

<h1 id="week-in-review">Week in Review</h1>

<h4 id="toy-problems">Toy Problems</h4>

<p>This week, my cohort, the junior students, started solving (almost) daily toy problems, which are small coding challenges designed to get us used to the type of timed problems that will be thrown our way at tech interviews. We have to complete these problems individually. We have 30-60 minutes to think of a solution, code the solution, and submit pull requests to have an automated tester give us feedback that we can use to help fix our solutions as necessary.</p>

<h4 id="tapouts">Tapouts</h4>

<p>This week, us juniors also started attending weekly(?) tapouts. Tapouts are like small group therapy sessions where five students voice their opinions of Hack Reactor to an alumnus. She will send anonimized feedback up the chain while also providing us with advice for any struggles we care to talk about. </p>

<h4 id="special-event-airbnb-presentation">Special Event: AirBnB Presentation</h4>

<p>Lead devs from <a href="https://twitter.com/Airbnb">AirBnB</a> presented a ton of info about their tech stack, their work environment, <a href="http://nerds.airbnb.com/weve-open-sourced-rendr-run-your-backbonejs-a/">their open source project</a>, dev career advice, startup advice, etc. There was a post-presentation panel for answering several questions. Then there was a post-panel meet-and-greet session. It was a truly fantastic event.</p>

<h4 id="saturday-social-night">Saturday Social Night</h4>

<p>I skipped last Saturday’s social night to go to a close friend’s birthday celebration(s). Week 2’s theme for social night was board/card games.</p>

<h1 id="what-i-learned--what-i-thought">What I Learned + What I Thought</h1>

<h4 id="inheritancesubclassing-in-javascript">Inheritance/Subclassing in JavaScript</h4>

<p>The subclassing sprint was a bit frustrating at first. It took me awhile to grasp the keyword <code>this</code> because of JavaScript’s tendency to pass functions around as parameters to other functions.</p>

<p>Upon wrapping one’s brain around <code>this</code> (and the <code>.call()</code>/<code>.apply()</code> methods), there was a lot of fun to be had with the assignment that Hack Reactor gave the students. This was the first assignment involving a visual facet, and the student body reacted accordingly (with creativity galore).</p>

<h4 id="algorithms">Algorithms</h4>

<p>The algorithms sprint was a fantastic challenge, but there was no specific set of knowledge to learn. It felt like the main goal of the sprint was to get students’ minds thinking in more computer-oriented ways. We were taught some basics about time complexity, but we didn’t go into much depth about Big-O notation. We briefly described actions (e.g., deleting data from an array) and algorithms (e.g., solutions to the <a href="http://en.wikipedia.org/wiki/Eight_queens_puzzle#Related_problems">n-queens puzzle</a>) as constant, linear, quadratic, polynomial, and exponential (as opposed to discussing the nuances of O(c), O(n), O(n^2), O(n^c), O(c^n), etc).</p>

<p>The main takeaway was that we should worry more about macro optimizations (storing data in variables in a way that allows for constant-time lookup) rather than micro optimizations (improving a <code>for</code> loop so then it loops fewer times). <strong>Micro optimizations are good, but they aren’t very valuable when you’re just creating prototypes, minimum viable products, etc.</strong></p>

<p>I’m somewhat disappointed that we weren’t taught specific algorithms such as quicksort, binary search, etc. I’m under the assumption that all software developers need to know the “greatest hits” of algorithms. Although, I’m also under the assumption that such knowledge is more useful in tech interviews than in day-to-day coding.</p>

<h4 id="layoutpositioning-htmlcss">Layout/Positioning (HTML/CSS)</h4>

<p>I taught myself a decent amount of HTML/CSS before my cohort’s start date, so I was very comfortable with the layout assignment, but it wasn’t easy. There are still plenty of times when proper CSS positioning eludes me. That said, this topic doesn’t provide an intellectual challenge.</p>

<p>The difficulty lies in getting the syntax just right and understanding hierarchy. Some students didn’t learn much HTML/CSS before joining Hack Reactor, and so they had a lot to learn (box model, DOM hierarchy, CSS selectors, etc.) in a very short amount of time.</p>

<p><strong>If you’re thinking of joining Hack Reactor as a student, I highly recommend you teach yourself HTML/CSS</strong> ahead of time. HTML/CSS isn’t tough to learn on your own, but it can be time-consuming even if you’ve got pros helping you. You may as well prepare yourself so then you can spend less time at Hack Reactor worrying about HTML/CSS and more time worrying about other technologies and concepts.</p>

<h4 id="d3-library">D3 (library)</h4>

<p><a href="http://d3js.org/">D3.js</a> is a JavaScript library for creating data-driven visuals inside HTML documents. I thought jQuery was cool, but now I think D3 takes the cake. It’s much harder to learn D3, but there is tremendous power to be had from familiarizing yourself with it.</p>

<p>That said, the D3 assignment left me mentally tired as hell. Like jQuery, you can easily select DOM elements, but the rest of the D3 syntax isn’t so straightforward, and the general concepts for using D3 properly will feel rather foreign at first. I hope to spend more time on my own to master D3 …when I’m not so damn tired. The key is to understand the <a href="http://bl.ocks.org/mbostock/3808218">general update pattern</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[HackR Diary] Thoughts about Week #1]]></title>
    <link href="http://RebootJeff.github.io/blog/2013/09/29/hackr-diary-thoughts-about-week-number-1/"/>
    <updated>2013-09-29T14:37:00-07:00</updated>
    <id>http://RebootJeff.github.io/blog/2013/09/29/hackr-diary-thoughts-about-week-number-1</id>
    <content type="html"><![CDATA[<p class="last-updated">Last updated on Oct 1, 2013 (minor edits).</p>

<blockquote class="twitter-tweet"><p>Good way to start week 2 at <a href="https://twitter.com/HackReactor">@HackReactor</a> <a href="http://t.co/6pB80gQKCO">pic.twitter.com/6pB80gQKCO</a></p>&mdash; Jeff Lee (@RebootJeff) <a href="https://twitter.com/RebootJeff/statuses/384728991359176704">September 30, 2013</a></blockquote>
<script async="" src="http://RebootJeff.github.io//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>This post is a bit late, but it can be hard to find time to write up a thorough blog post when I’m studying at Hack Reactor for 70-80 hours/week. During my free time, it’s tempting to just play <a href="http://www.playhawken.com">Hawken</a> or catch up on YouTube (yes, I subscribe to some damn good channels).</p>

<p>Quick correction: In <a href="">my previous HackR Diary entry</a>, I said that the staff gets a 1-week vacation every 7 weeks (6 weeks of work followed by a 1-week break). This isn’t entirely true. The interim week can be used as vacation, but staff also use it to make changes to Hack Reactor. For example, the most recent interim week was used by staff to rearrange the lecture room, which involved installing a new projector screen.</p>

<h1 id="week-in-review">Week in Review</h1>

<p>I wake up everyday Mon-Sat at 7:30am. I should really wake up earlier so then I can arrive before 8:50am. I rely on the BART (subway) to get to/from Hack Reactor. I make my subway rides more enjoyable by saving YouTube videos as .mp4 files to my phone. I generally watch documentaries on cosmology and nature featuring British narrators. The accent is key. If you’re interested in such documentaries, <strong>check out <a href="http://science-documentaries.com/">this link</a> and <a href="http://www.youtube.com/watch?v=ag0U65NkxrI&amp;feature=share&amp;list=PL300BF5A42D3C21C4">this link</a></strong>.</p>

<p>Ok enough of that. You came here to read about the intersection of start-up life and student life, not BBC on YouTube. Here’s a quick recap of what I was up to last week:</p>

<ul>
  <li><strong>Learning:</strong> 2 “standard” sprints + 1 longer sprint</li>
  <li><strong>Reflection:</strong> Provided feedback on what students did and didn’t like about week 1.</li>
  <li><strong>Week 0 self-assessment:</strong> An ungraded quiz to force you to ask yourself how confident you are about what was taught in the pre-course work.</li>
  <li><strong>Code Review by seniors:</strong> The “upperclassmen” took a look at our data structures solutions.</li>
  <li><strong>Social Night:</strong> Visited <em>House of Air</em>, a sweet trampoline gym.</li>
</ul>

<h1 id="what-i-learned">What I Learned</h1>

<ul>
  <li><strong>Sprint #1:</strong> Recursion</li>
  <li><strong>Sprint #2:</strong> Mini-clone of Underscore.js</li>
  <li><strong>Extra #1:</strong> Advice for Success
    <ul>
      <li>Hack Reactor’s role in students’ success</li>
      <li>Students’ role in our own success</li>
    </ul>
  </li>
  <li><strong>Extra #2:</strong> Debugging
    <ul>
      <li><code>debugger;</code> statement</li>
      <li>Sources tab in Google Chrome dev tools</li>
      <li>Call Stack in Sources tab</li>
    </ul>
  </li>
  <li><strong>Sprint #3:</strong> Instantiating Data Structures with various Class Patterns
    <ul>
      <li>Class Patterns
        <ul>
          <li>Functional (with and without shared methods)</li>
          <li>Prototypal</li>
          <li>Pseudoclassical</li>
        </ul>
      </li>
      <li>Data Structures
        <ul>
          <li>Stacks</li>
          <li>Queues</li>
          <li>Linked Lists</li>
          <li>Trees</li>
          <li>Sets</li>
          <li>Hash Tables</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h1 id="what-i-thought">What I Thought</h1>

<h2 id="lectures">Lectures</h2>

<p><strong>Week 1 is very different from most weeks</strong> due to the amount of lengthy lectures we have to sit through, but ya know what? I really liked the lectures. The main instructor for week 1 is Marcus, and he’s pretty great at teaching. Students constantly ask questions during lecture so it feels much more interactive and much less like being force-fed information.</p>

<p>I like that lectures involve plenty of analogies, live coding examples, industry best practices, and “every interviewer will ask you about this” moments. You’d think students would get pretty tired of all the lectures, but they’re too good to be off-putting. Also, 5+ hours of lectures per day isn’t a lot when you consider we’re spending 12+ hours per day at the school.</p>

<h2 id="paired-programming">Paired Programming</h2>

<p>I generally like the idea of paired programming so long as you have a good dynamic with your partner. That said, it can be <em>really</em> tiring because you’re constantly talking as you and your partner are coding. Not only are you exhausting your brain’s cognitive abilities by working on programming challenges, but you’re also exercising verbal comm skills and listening skills. It can be tough to listen to your partner explain his/her solution when you feel like you’re on the brink of working out your own awesome solution in your head.</p>

<h2 id="the-school">The School</h2>

<p>Hack Reactor is a fantastic environment, and I know every student of every bootcamp says this, but it’s just so amazing to be in a school where the students and teachers are all so pumped to be there. On top of that, the students are open-minded without being naive. Basically, <strong>Hack Reactor is filled with the positive vibes that should make every college wildly jealous.</strong></p>

<p>It’s also worth noting that Hack Reactor is transparent. They’re a small company, and their small size allows them to build a tighter community of teachers, students, and alumni. I love that Hack Reactor staff is very honest and genuine. When cynics look at the relatively expensive tuition, it’s tempting for them to say HackR is “in it for the money,” but check out a lecture or listen to them explain their intentions and you won’t hear a sales pitch. You’ll hear earnest intentions to educate the next generation of developers using next-generation methods.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[HackR Diary] First Impressions]]></title>
    <link href="http://RebootJeff.github.io/blog/2013/09/25/hackr-diary-first-impressions/"/>
    <updated>2013-09-25T21:23:00-07:00</updated>
    <id>http://RebootJeff.github.io/blog/2013/09/25/hackr-diary-first-impressions</id>
    <content type="html"><![CDATA[<p class="last-updated">Last updated on Sep 28, 2013 to edit section on guard operator.</p>

<p>It’s the end of day #3. I don’t have much time to write, so this blog post is a smattering of thoughts from a fresh Hack Reactor student.</p>

<h1 id="initial-observations">Initial Observations</h1>

<h2 id="recap">Recap</h2>

<ul>
  <li>Day 1 and 2 are just review days covering topics and challenges covered by the pre-course work. Day 1 covered ettiquette, expectations, and recursion. Day 2 covered passing functions, a lot of JS fundamentals, and awesome advice for being successful (e.g., we talked about impostor syndrome, Hack Reactor’s motivations, some job-hunting advice, etc).</li>
  <li>Day 3 covered paired programming, object-oriented programming (OOP), and classes (e.g., functional instantiation vs. prototypal instantiation vs. psuedoclassical instantiation).</li>
</ul>

<h2 id="logistics">Logistics</h2>

<ul>
  <li>Week 1 is full of lectures. Each day is about 50% lectures, 50% coding.</li>
  <li>The first 6 weeks will have plenty of lectures and structured challenges. Then there is an interim week where you work on a project from home, which gives you the flexibility to travel, but the Hack Reactor staff will be offline (they basically get a 1-week vacation every 7 weeks). After the interim week is more time for your individual project, time for a group project, and time for job prep.</li>
</ul>

<h2 id="nuances">Nuances</h2>

<ul>
  <li>Lunch breaks and dinner breaks are often cut short due to lectures running long.</li>
  <li>Lectures run long due to people asking questions.</li>
  <li>All teachers advocate for students to ask questions. At Hack Reactor, the students ask a TON of questions because the class atmosphere is very comfortable.</li>
  <li>The students are really nice. Everyone’s excited to meet new people (even the quiet ones are clearly motivated to be social).</li>
  <li>I’ve heard stories of students of other bootcamps going out at night to hang out and have fun. I could be wrong, but so far it seems like there’s no time/energy left for going out at night.</li>
  <li>That said, students don’t stay here that late (so far). A lot of us leave by 9pm. I thought it’d be common to leave no earlier than 10pm, but there aren’t even that many students from the senior cohort by the time the clock strikes 9:20pm (which is the latest I’ve stayed). I have a feeling this will change in a few weeks (beause that will be crunch time for the senior cohort).</li>
  <li>Nothing’s perfect. Some equipment is broken, some chairs are shitty, some online resources are buggy, etc. None of these issues have been big issues.</li>
</ul>

<h1 id="nuggets-of-knowledge">Nuggets of Knowledge</h1>

<p>I’ve picked up a lot of cool (and oftentimes valuable) advice/facts in just 3 days.</p>

<h2 id="life-nuggets">Life Nuggets</h2>

<h3 id="re-education">Re: <strong>Education</strong></h3>

<p>Passive learning is deceptively similar to true understanding. When you just observe a correct solution, it can give you the illusion that you learned more than you really did. For example, you might watch someone code up a good solution. When you walk away, you’ll think you understand everything necessary to solve the problem, but all you learned was some code without its meaning.</p>

<h3 id="re-starting-a-new-tech-career">Re: <strong>Starting a new tech career</strong></h3>

<p>Everyone thinks starting a new tech career with a tiny startup is really exciting. That might be true, but people tend to forget an important caveat: less structure could lead to a less efficient roadmap to individual success.</p>

<p>In less formal terms, you might work for a tiny startup on something you truly care about, but the startup could easily be too small or too young to provide an environment with superiors/peers that can help you develop your programming skills (or any job-related skills).</p>

<h2 id="javascript-nuggets">JavaScript Nuggets</h2>

<h3 id="guard-operator">Guard operator</h3>

<p>Marcus, the primary instructor, warned us that some devs dislike the guard operator, but it’s really concise (which is cool to him). The guard operator is a logical-AND or logical-OR that “guards” a small bit of code the same way an <code>if</code> statement would guard it. For example:</p>

<div><div class="CodeRay">
  <div class="code"><pre><span class="keyword">if</span>(goodStudent === <span class="predefined-constant">true</span>){
    candy++;
}

<span class="comment">// The above code could be refactored into the following:</span>
goodStudent &amp;&amp; candy++;
</pre></div>
</div>
</div>

<p>The following is a more practical example:</p>

<div><div class="CodeRay">
  <div class="code"><pre><span class="comment">// Let's say you want to only call a function with an array if the array is NOT undefined (i.e., you want to guard against a scenario where you pass an undefined argument to a function).</span>
arg &amp;&amp; myFunction(arg);
</pre></div>
</div>
</div>

<p>You can also use a logical-OR in a guard-like fashion. This is sometimes called the <strong>default operator</strong> rather than a guard operator.</p>

<div><div class="CodeRay">
  <div class="code"><pre><span class="comment">// if no name was passed into the function, just give the name variable a default value of 'friend'</span>

<span class="keyword">var</span> <span class="function">sayHello</span> = <span class="keyword">function</span>(name){
  <span class="keyword">if</span>(name === <span class="predefined-constant">undefined</span>){
    name = <span class="string"><span class="delimiter">'</span><span class="content">friend</span><span class="delimiter">'</span></span>;
  }
  console.log(<span class="string"><span class="delimiter">'</span><span class="content">Hello, </span><span class="delimiter">'</span></span> + name + <span class="string"><span class="delimiter">'</span><span class="content">!</span><span class="delimiter">'</span></span>);
}

<span class="comment">// the function above could be refactored to use the OR-guard as follows:</span>
<span class="keyword">var</span> <span class="function">sayHello</span> = <span class="keyword">function</span>(name){
  name = name || <span class="string"><span class="delimiter">'</span><span class="content">friend</span><span class="delimiter">'</span></span>;
  console.log(<span class="string"><span class="delimiter">'</span><span class="content">Hello, </span><span class="delimiter">'</span></span> + name + <span class="string"><span class="delimiter">'</span><span class="content">!</span><span class="delimiter">'</span></span>);
}
</pre></div>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[HackR Diary] Pre-Course Anticipation]]></title>
    <link href="http://RebootJeff.github.io/blog/2013/09/22/hackr-diary-pre-course-anticipation/"/>
    <updated>2013-09-22T11:51:00-07:00</updated>
    <id>http://RebootJeff.github.io/blog/2013/09/22/hackr-diary-pre-course-anticipation</id>
    <content type="html"><![CDATA[<p><img src="/images/20130922/mytwittler.png" alt="Thumbnail of my twittler" /></p>

<p class="my-caption">Thumbnail of my Twitter clone assignment</p>

<p>Tomorrow is a huge day for me. Tomorrow is when <a href="/blog/2013/08/25/hack-reactor-is-my-future/">I start attending Hack Reactor</a>. I’m about to go from funemployment (going to bed at 4am; waking up at 12pm) to immersive student life (spending 80 hours/week on “campus”). I will write about my journey from amateur to trained pro in a series of blog posts called <a href="/blog/categories/hackr-diary/">HackR Diary</a>.</p>

<h1 id="mandatory-pre-course-work">Mandatory Pre-Course Work</h1>
<p>I enrolled in tomorrow’s Hack Reactor cohort back in late August. So I had a month to get through some pre-course “homework.” Some bits of the homework were harder than I expected (e.g., functional JavaScript challenges); some bits were easier than I expected (e.g., creation of simple Twitter-like front-end). The Twitter clone challenge was actually really fun for me because I like a challenge that actually includes a front-end.</p>

<p>There were times I was frustrated because I felt like I would be doing a lot better with just a little bit of help (e.g., recursion challenges), but I didn’t ask for much help, so I did a lot of solo struggling. However, one of the biggest bummers was going through the Backbone.js assignment. The assignment was to simply complete the <a href="http://www.codeschool.com/courses/anatomy-of-backbonejs">Code School Backbone.js tutorials</a> (two of them). <strong>Hack Reactor provided me with a Code School membership</strong>, and I was excited to take advantage of it, but that particular set of Code School tutorials isn’t very good at teaching. I felt like I didn’t get a good grip of the concepts (models/collections, views/rendering, routers).</p>

<p>I’m also a bit jaded when it comes to online tutorials. They generally do a lot of hand-holding to the point where you don’t retain much info, and if you get stuck on something, you’re a bit screwed. <strong>My low patience for tutorials is part of why I decided to enroll in a bootcamp, but there I was: doing tutorials as part of bootcamp homework!</strong> Don’t get me wrong, online tutorials are great resources in general, but I can only take so much. Eventually, I’d rather do some <a href="http://www.coderbyte.com/">Coderbyte</a> challenges instead of Code School challenges.</p>

<h1 id="pre-course-check-in-meeting">Pre-Course Check-In Meeting</h1>
<p>Hack Reactor makes incoming students meet with a Hacker-in-Residence (basically a Teaching Assitant?) to check up on the pre-course homework. I heard that some students have been weeded out of the bootcamp by the homework.</p>

<p>I met with an H-in-R named <a href="http://thishackergirl.wordpress.com/">Bianca</a>. My meeting was done in person, but these check-in meetings are sometimes conducted via webcam for those who haven’t arrived in San Francisco yet.</p>

<p>Before the meeting, I was pretty worried about how I stacked up compared to my peers. We’re not experts (hence the desire to enroll in a bootcamp), but we’re supposed to be much better than a typical beginner because <a href="/blog/2013/09/15/coding-bootcamp-research-admissions-part2/#hack-reactor-wants-to-kick-your-ass">the admissions process was not easy</a>. During the meeting, Bianca asked me how I felt about the three biggest parts of the pre-course homework: the functional JavaScript challenge involving test-driven development (TDD), the rudimentary Twitter front-end clone, and the JSON recursion challenges.</p>

<p>I anxiously watched as Bianca scrolled through my code. After discussing some questions I had, issues I struggled with, and solutions to my few bugs, I felt a lot better. Maybe I put too much pressure on myself, but I tend to worry a lot. <strong>I walked out of the conference room feeling very positive.</strong></p>

<h1 id="other-pre-course-work">Other Pre-Course Work</h1>
<p>Hack Reactor suggests completing more tutorials and reading some resources if students have some spare time before classes start. Suggested topics include Git, Node.js, CSS, Ruby, Ruby on Rails, and CoffeeScript.</p>

<p>I <a href="http://youtu.be/jM8KE_Fa6JI">studied Backbone.js</a> a bit more, I read about JavaScript <a href="http://www.codeproject.com/Articles/580165/JavaScript-Best-Practices">best</a> <a href="http://www.thinkful.com/learn/javascript-best-practices-1/">practices</a>, and I spent a lot of time doing more Code School tutorials. Some are better than others. I mostly looked at HTML/CSS stuff, which sounds easy, but I just wanted to make sure there weren’t too many gaps in my fundamental knowledge (<code>position</code> and <code>display</code> properties still slap me around sometimes).</p>

<p><strong>The <a href="http://www.codeschool.com/courses/fundamentals-of-design">Code School tutorial on the Fundamentals of Design</a> was pretty awesome</strong> actually. It’s the only tutorial that doesn’t require coding, but it imparted quite a few cool nuggets of knowledge about how to choose fonts, colors, and layouts. The layouts part wasn’t as insightful (I wish they had you actually implement a grid with some coding), but learning about typeface categories (e.g., humanist vs. transitional vs. modern) and what defines a good color scheme (e.g., 60 degrees of hue separation) was sweeeet. Hopefully I’ll get around to blogging about the basics of fonts and colors one day. It’s just some very simple stuff that can help a lot.</p>

<p>Overall, I didn’t do as much studying on my own as I should have. I suck at independent study. Bahumbug.</p>

<h1 id="im-so-friggin-nervous">I’m so friggin’ nervous!</h1>
<p>Although the pre-course check-in meeting left me feeling optimistic about my future success at Hack Reactor, I no longer feel quite so confident.</p>

<p>This past weekend, I got access to my cohort’s Google Group. I bet that Hack Reactor nearly forgot to add me to the group. I browsed the group forum, and I saw posts dating back from July. There were some posts in August about meeting up to get to know one another before our Hack Reactor course starts. Doh! I missed those opportunities!</p>

<p>There was also a thread of self-introductions. Only a handful of people introduced themselves, but damn! They sound impressive. They make me worry about how I’ll compare. What’s funny is that a lot of them are non-Asians who have lived in China. They can speak Mandarin way better than I can (i.e., I only know a few basic words). Hopefully I don’t get a lot of flak. I already get enough grief from my mom.</p>

<h1 id="my-plans-for-blogging">My plans for blogging</h1>
<p>Considering that I will be busier than I have ever been in my entire life(?), I probably won’t have much time for blogging, but I am determined to do a fair amount of blogging anyway!</p>

<p>I still have plenty of <a href="/blog/categories/bootcamp-research/">coding bootcamp research</a> to blog about, but I will give my HackR Diary a higher priority. I’ve set a goal to blog about my experience at Hack Reactor at least once per week. Each diary entry will include a quick recap of topics taught by HackR staff, observational knowledge nuggets I picked up myself, and my personal evaluation of myself and the bootcamp.</p>
]]></content>
  </entry>
  
</feed>
